// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`operation metadata fails if summary is missing 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": "must have a summary",
    "exempted": false,
    "expected": "{"summary":"Matcher.string"}",
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": false,
    "received": "{"tags":["example"],"parameters":[{"name":"version","in":"query"}],"operationId":"getExample","responses":{}}",
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example query parameter: version",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`operation metadata fails if tags is not supplied 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": "tags must exist and have at least one tag",
    "exempted": false,
    "expected": "{"tags":["Matcher.string"]}",
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": false,
    "received": "{"summary":"this is an example","tags":[],"parameters":[{"name":"version","in":"query"}],"operationId":"getExample","responses":{}}",
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example query parameter: version",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`operation parameters allows adding a required query parameter to a new operation 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example query parameter: version",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "required",
        "required": true,
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "required",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "required",
        ],
        "jsonPath": "/paths/~1example/get/parameters/1",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example query parameter: required",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`operation parameters fails if the default value is changed 1`] = `
[
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "changeType": "changed",
      "changed": {
        "after": {
          "in": "query",
          "name": "query_parameter",
          "schema": {
            "default": "after",
            "type": "string",
          },
        },
        "before": {
          "in": "query",
          "name": "query_parameter",
          "schema": {
            "default": "before",
            "type": "string",
          },
        },
      },
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "query_parameter",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "query_parameter",
        ],
        "jsonPath": "/paths/~1example/get/parameters/1",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#breaking-changes",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent changing optional query parameter to required",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /example query parameter: query_parameter",
  },
  {
    "change": {
      "changeType": "changed",
      "changed": {
        "after": {
          "in": "query",
          "name": "query_parameter",
          "schema": {
            "default": "after",
            "type": "string",
          },
        },
        "before": {
          "in": "query",
          "name": "query_parameter",
          "schema": {
            "default": "before",
            "type": "string",
          },
        },
      },
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "query_parameter",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "query_parameter",
        ],
        "jsonPath": "/paths/~1example/get/parameters/1",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#breaking-changes",
    "error": "default schema was changed from before to after",
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent changing parameter default value",
    "passed": false,
    "received": undefined,
    "type": "changed",
    "where": "GET /example query parameter: query_parameter",
  },
  {
    "change": {
      "changeType": "changed",
      "changed": {
        "after": {
          "in": "query",
          "name": "query_parameter",
          "schema": {
            "default": "after",
            "type": "string",
          },
        },
        "before": {
          "in": "query",
          "name": "query_parameter",
          "schema": {
            "default": "before",
            "type": "string",
          },
        },
      },
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "query_parameter",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "query_parameter",
        ],
        "jsonPath": "/paths/~1example/get/parameters/1",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent changing parameter schema format",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /example query parameter: query_parameter",
  },
  {
    "change": {
      "changeType": "changed",
      "changed": {
        "after": {
          "in": "query",
          "name": "query_parameter",
          "schema": {
            "default": "after",
            "type": "string",
          },
        },
        "before": {
          "in": "query",
          "name": "query_parameter",
          "schema": {
            "default": "before",
            "type": "string",
          },
        },
      },
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "query_parameter",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "query_parameter",
        ],
        "jsonPath": "/paths/~1example/get/parameters/1",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent changing parameter schema pattern",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /example query parameter: query_parameter",
  },
  {
    "change": {
      "changeType": "changed",
      "changed": {
        "after": {
          "in": "query",
          "name": "query_parameter",
          "schema": {
            "default": "after",
            "type": "string",
          },
        },
        "before": {
          "in": "query",
          "name": "query_parameter",
          "schema": {
            "default": "before",
            "type": "string",
          },
        },
      },
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "query_parameter",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "query_parameter",
        ],
        "jsonPath": "/paths/~1example/get/parameters/1",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent changing parameter schema type",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /example query parameter: query_parameter",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`operation parameters fails when adding a required query parameter 1`] = `
[
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "required",
        "required": true,
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "required",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "required",
        ],
        "jsonPath": "/paths/~1example/get/parameters/1",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example query parameter: required",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "required",
        "required": true,
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "required",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "required",
        ],
        "jsonPath": "/paths/~1example/get/parameters/1",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#breaking-changes",
    "error": "expected request query parameter required to not be required",
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent adding required query parameter",
    "passed": false,
    "received": undefined,
    "type": "added",
    "where": "GET /example query parameter: required",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`operation parameters fails when changing optional to required query parameter 1`] = `
[
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "changeType": "changed",
      "changed": {
        "after": {
          "in": "query",
          "name": "required",
          "required": true,
        },
        "before": {
          "in": "query",
          "name": "required",
        },
      },
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "required",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "required",
        ],
        "jsonPath": "/paths/~1example/get/parameters/1",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#breaking-changes",
    "error": "expected request query parameter true to not change from optional to required",
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent changing optional query parameter to required",
    "passed": false,
    "received": undefined,
    "type": "changed",
    "where": "GET /example query parameter: required",
  },
  {
    "change": {
      "changeType": "changed",
      "changed": {
        "after": {
          "in": "query",
          "name": "required",
          "required": true,
        },
        "before": {
          "in": "query",
          "name": "required",
        },
      },
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "required",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "required",
        ],
        "jsonPath": "/paths/~1example/get/parameters/1",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#breaking-changes",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent changing parameter default value",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /example query parameter: required",
  },
  {
    "change": {
      "changeType": "changed",
      "changed": {
        "after": {
          "in": "query",
          "name": "required",
          "required": true,
        },
        "before": {
          "in": "query",
          "name": "required",
        },
      },
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "required",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "required",
        ],
        "jsonPath": "/paths/~1example/get/parameters/1",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent changing parameter schema format",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /example query parameter: required",
  },
  {
    "change": {
      "changeType": "changed",
      "changed": {
        "after": {
          "in": "query",
          "name": "required",
          "required": true,
        },
        "before": {
          "in": "query",
          "name": "required",
        },
      },
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "required",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "required",
        ],
        "jsonPath": "/paths/~1example/get/parameters/1",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent changing parameter schema pattern",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /example query parameter: required",
  },
  {
    "change": {
      "changeType": "changed",
      "changed": {
        "after": {
          "in": "query",
          "name": "required",
          "required": true,
        },
        "before": {
          "in": "query",
          "name": "required",
        },
      },
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "required",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "required",
        ],
        "jsonPath": "/paths/~1example/get/parameters/1",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent changing parameter schema type",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /example query parameter: required",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`operation parameters names fails if the case is not correct, stability beta 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "added": {
        "in": "path",
        "name": "pathParameter",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "path": "pathParameter",
          },
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "path",
          "pathParameter",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get/parameters/1",
        "kind": "path-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": "expected parameter name pathParameter to be snake case",
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": false,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{pathParameter} path parameter: pathParameter",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{pathParameter} query parameter: version",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "path": "pathParameter",
          },
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "path",
          "pathParameter",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get/parameters/1",
        "kind": "path-parameter",
      },
      "value": {
        "in": "path",
        "name": "pathParameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#organization-and-group-tenants-for-resources",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "tenant formatting",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter} path parameter: pathParameter",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter}",
  },
]
`;

exports[`operation parameters names fails if the case is not correct, stability experimental 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "added": {
        "in": "path",
        "name": "pathParameter",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "path": "pathParameter",
          },
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "path",
          "pathParameter",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get/parameters/1",
        "kind": "path-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": "expected parameter name pathParameter to be snake case",
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": false,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{pathParameter} path parameter: pathParameter",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{pathParameter} query parameter: version",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "path": "pathParameter",
          },
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "path",
          "pathParameter",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get/parameters/1",
        "kind": "path-parameter",
      },
      "value": {
        "in": "path",
        "name": "pathParameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#organization-and-group-tenants-for-resources",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "tenant formatting",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter} path parameter: pathParameter",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter}",
  },
]
`;

exports[`operation parameters names fails if the case is not correct, stability ga 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "added": {
        "in": "path",
        "name": "pathParameter",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "path": "pathParameter",
          },
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "path",
          "pathParameter",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get/parameters/1",
        "kind": "path-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": "expected parameter name pathParameter to be snake case",
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": false,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{pathParameter} path parameter: pathParameter",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{pathParameter} query parameter: version",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "path": "pathParameter",
          },
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "path",
          "pathParameter",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get/parameters/1",
        "kind": "path-parameter",
      },
      "value": {
        "in": "path",
        "name": "pathParameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#organization-and-group-tenants-for-resources",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "tenant formatting",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter} path parameter: pathParameter",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{pathParameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{pathParameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{pathParameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{pathParameter}",
  },
]
`;

exports[`operation parameters names passes if the case is correct, stability beta 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "added": {
        "in": "path",
        "name": "path_parameter",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "path": "path_parameter",
          },
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "path",
          "path_parameter",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get/parameters/1",
        "kind": "path-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{path_parameter} path parameter: path_parameter",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{path_parameter} query parameter: version",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "prop.sub_prop",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "prop.sub_prop",
          },
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "query",
          "prop.sub_prop",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get/parameters/2",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{path_parameter} query parameter: prop.sub_prop",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "path": "path_parameter",
          },
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "path",
          "path_parameter",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get/parameters/1",
        "kind": "path-parameter",
      },
      "value": {
        "in": "path",
        "name": "path_parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#organization-and-group-tenants-for-resources",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "tenant formatting",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter} path parameter: path_parameter",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter}",
  },
]
`;

exports[`operation parameters names passes if the case is correct, stability experimental 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "added": {
        "in": "path",
        "name": "path_parameter",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "path": "path_parameter",
          },
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "path",
          "path_parameter",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get/parameters/1",
        "kind": "path-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{path_parameter} path parameter: path_parameter",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{path_parameter} query parameter: version",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "prop.sub_prop",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "prop.sub_prop",
          },
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "query",
          "prop.sub_prop",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get/parameters/2",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{path_parameter} query parameter: prop.sub_prop",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "path": "path_parameter",
          },
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "path",
          "path_parameter",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get/parameters/1",
        "kind": "path-parameter",
      },
      "value": {
        "in": "path",
        "name": "path_parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#organization-and-group-tenants-for-resources",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "tenant formatting",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter} path parameter: path_parameter",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter}",
  },
]
`;

exports[`operation parameters names passes if the case is correct, stability ga 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "added": {
        "in": "path",
        "name": "path_parameter",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "path": "path_parameter",
          },
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "path",
          "path_parameter",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get/parameters/1",
        "kind": "path-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{path_parameter} path parameter: path_parameter",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{path_parameter} query parameter: version",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "prop.sub_prop",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "prop.sub_prop",
          },
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "query",
          "prop.sub_prop",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get/parameters/2",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{path_parameter} query parameter: prop.sub_prop",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "path": "path_parameter",
          },
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
          "parameters",
          "path",
          "path_parameter",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get/parameters/1",
        "kind": "path-parameter",
      },
      "value": {
        "in": "path",
        "name": "path_parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#organization-and-group-tenants-for-resources",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "tenant formatting",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter} path parameter: path_parameter",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example/{path_parameter}",
        },
        "conceptualPath": [
          "operations",
          "/example/{}",
          "get",
        ],
        "jsonPath": "/paths/~1example~1{path_parameter}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example/{path_parameter}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example/{path_parameter}",
  },
]
`;

exports[`operation parameters passes if the default value is changed in experimental 1`] = `
[
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`operation parameters passes when changing optional to required query parameter in experimental 1`] = `
[
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`operationId missing fails if empty string 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": "operationId must be camelCase and start with get|create|list|update|delete",
    "exempted": false,
    "expected": "{"operationId":"Matcher.camel case and starts with get|create|list|update|delete matcher"}",
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": false,
    "received": "{"summary":"this is an example","tags":["example"],"parameters":[{"name":"version","in":"query"}],"operationId":"","responses":{}}",
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example query parameter: version",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`operationId missing fails if undefined 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": "operationId must be camelCase and start with get|create|list|update|delete",
    "exempted": false,
    "expected": "{"operationId":"Matcher.camel case and starts with get|create|list|update|delete matcher"}",
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": false,
    "received": "{"summary":"this is an example","tags":["example"],"parameters":[{"name":"version","in":"query"}],"responses":{}}",
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": "operationId must be set and a string",
    "exempted": false,
    "expected": "{"operationId":"Matcher.string"}",
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": false,
    "received": "{"summary":"this is an example","tags":["example"],"parameters":[{"name":"version","in":"query"}],"responses":{}}",
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example query parameter: version",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`operationId when set fails if changed 1`] = `
[
  {
    "change": {
      "changeType": "changed",
      "changed": {
        "after": {
          "method": "get",
          "operationId": "getExampleButDifferent",
          "pathPattern": "/example",
          "summary": "this is an example",
          "tags": [
            "example",
          ],
        },
        "before": {
          "method": "get",
          "operationId": "getExample",
          "pathPattern": "/example",
          "summary": "this is an example",
          "tags": [
            "example",
          ],
        },
      },
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExampleButDifferent",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExampleButDifferent",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExampleButDifferent",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "changeType": "changed",
      "changed": {
        "after": {
          "method": "get",
          "operationId": "getExampleButDifferent",
          "pathPattern": "/example",
          "summary": "this is an example",
          "tags": [
            "example",
          ],
        },
        "before": {
          "method": "get",
          "operationId": "getExample",
          "pathPattern": "/example",
          "summary": "this is an example",
          "tags": [
            "example",
          ],
        },
      },
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": "operationIds was changed",
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "consistent operation ids",
    "passed": false,
    "received": undefined,
    "type": "changed",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExampleButDifferent",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExampleButDifferent",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExampleButDifferent",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`operationId when set fails if not camel case 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "get-hello-world",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": "operationId must be camelCase and start with get|create|list|update|delete",
    "exempted": false,
    "expected": "{"operationId":"Matcher.camel case and starts with get|create|list|update|delete matcher"}",
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": false,
    "received": "{"summary":"this is an example","tags":["example"],"parameters":[{"name":"version","in":"query"}],"operationId":"get-hello-world","responses":{}}",
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "get-hello-world",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "get-hello-world",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "get-hello-world",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example query parameter: version",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "get-hello-world",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "get-hello-world",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "get-hello-world",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "get-hello-world",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`operationId when set fails if prefix is wrong 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "findHelloWorld",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": "operationId must be camelCase and start with get|create|list|update|delete",
    "exempted": false,
    "expected": "{"operationId":"Matcher.camel case and starts with get|create|list|update|delete matcher"}",
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": false,
    "received": "{"summary":"this is an example","tags":["example"],"parameters":[{"name":"version","in":"query"}],"operationId":"findHelloWorld","responses":{}}",
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "findHelloWorld",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "findHelloWorld",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "findHelloWorld",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example query parameter: version",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "findHelloWorld",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "findHelloWorld",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "findHelloWorld",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "findHelloWorld",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`operationId when set fails if removed 1`] = `
[
  {
    "change": {
      "changeType": "changed",
      "changed": {
        "after": {
          "method": "get",
          "pathPattern": "/example",
          "summary": "this is an example",
          "tags": [
            "example",
          ],
        },
        "before": {
          "method": "get",
          "operationId": "getExample",
          "pathPattern": "/example",
          "summary": "this is an example",
          "tags": [
            "example",
          ],
        },
      },
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": "operationId must be camelCase and start with get|create|list|update|delete",
    "exempted": false,
    "expected": "{"operationId":"Matcher.camel case and starts with get|create|list|update|delete matcher"}",
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": false,
    "received": "{"summary":"this is an example","tags":["example"],"parameters":[{"name":"version","in":"query"}],"responses":{}}",
    "type": "changed",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": "operationId must be set and a string",
    "exempted": false,
    "expected": "{"operationId":"Matcher.string"}",
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": false,
    "received": "{"summary":"this is an example","tags":["example"],"parameters":[{"name":"version","in":"query"}],"responses":{}}",
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "changeType": "changed",
      "changed": {
        "after": {
          "method": "get",
          "pathPattern": "/example",
          "summary": "this is an example",
          "tags": [
            "example",
          ],
        },
        "before": {
          "method": "get",
          "operationId": "getExample",
          "pathPattern": "/example",
          "summary": "this is an example",
          "tags": [
            "example",
          ],
        },
      },
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": "operationIds was changed",
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "consistent operation ids",
    "passed": false,
    "received": undefined,
    "type": "changed",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`operationId when set fails when camel case and valid prefix but no suffix 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": "operationId must be camelCase and start with get|create|list|update|delete",
    "exempted": false,
    "expected": "{"operationId":"Matcher.camel case and starts with get|create|list|update|delete matcher"}",
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": false,
    "received": "{"summary":"this is an example","tags":["example"],"parameters":[{"name":"version","in":"query"}],"operationId":"get","responses":{}}",
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example query parameter: version",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "get",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`operationId when set passes if removed with a spec being removed 1`] = `
[
  {
    "change": {
      "changeType": "removed",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "removed": {
        "before": {
          "method": "get",
          "operationId": "getExample",
          "pathPattern": "/example",
          "summary": "this is an example",
          "tags": [
            "example",
          ],
        },
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#breaking-changes",
    "error": "expected operation to be present",
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent operation removal",
    "passed": false,
    "received": undefined,
    "type": "removed",
    "where": "GET /example",
  },
]
`;

exports[`operationId when set passes when camel case and has a hump 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getYesHump",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getYesHump",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getYesHump",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getYesHump",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example query parameter: version",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getYesHump",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getYesHump",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getYesHump",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getYesHump",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`passes when operation is set correctly, stability beta 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example query parameter: version",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`passes when operation is set correctly, stability experimental 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example query parameter: version",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`passes when operation is set correctly, stability ga 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example query parameter: version",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;

exports[`path requirements fails if the path root is a parameter 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getAnything",
        "pathPattern": "/{anything}/{goes}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/{anything}/{goes}",
        },
        "conceptualPath": [
          "operations",
          "/{}/{}",
          "get",
        ],
        "jsonPath": "/paths/~1{anything}~1{goes}/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /{anything}/{goes}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/{anything}/{goes}",
        },
        "conceptualPath": [
          "operations",
          "/{}/{}",
          "get",
        ],
        "jsonPath": "/paths/~1{anything}~1{goes}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getAnything",
        "pathPattern": "/{anything}/{goes}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /{anything}/{goes}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/{anything}/{goes}",
        },
        "conceptualPath": [
          "operations",
          "/{}/{}",
          "get",
        ],
        "jsonPath": "/paths/~1{anything}~1{goes}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getAnything",
        "pathPattern": "/{anything}/{goes}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /{anything}/{goes}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/{anything}/{goes}",
        },
        "conceptualPath": [
          "operations",
          "/{}/{}",
          "get",
        ],
        "jsonPath": "/paths/~1{anything}~1{goes}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getAnything",
        "pathPattern": "/{anything}/{goes}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /{anything}/{goes}",
  },
  {
    "change": {
      "added": {
        "in": "path",
        "name": "anything",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "path": "anything",
          },
          "method": "get",
          "path": "/{anything}/{goes}",
        },
        "conceptualPath": [
          "operations",
          "/{}/{}",
          "get",
          "parameters",
          "path",
          "anything",
        ],
        "jsonPath": "/paths/~1{anything}~1{goes}/get/parameters/1",
        "kind": "path-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /{anything}/{goes} path parameter: anything",
  },
  {
    "change": {
      "added": {
        "in": "path",
        "name": "goes",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "path": "goes",
          },
          "method": "get",
          "path": "/{anything}/{goes}",
        },
        "conceptualPath": [
          "operations",
          "/{}/{}",
          "get",
          "parameters",
          "path",
          "goes",
        ],
        "jsonPath": "/paths/~1{anything}~1{goes}/get/parameters/2",
        "kind": "path-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /{anything}/{goes} path parameter: goes",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "get",
          "path": "/{anything}/{goes}",
        },
        "conceptualPath": [
          "operations",
          "/{}/{}",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1{anything}~1{goes}/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /{anything}/{goes} query parameter: version",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getAnything",
        "pathPattern": "/{anything}/{goes}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/{anything}/{goes}",
        },
        "conceptualPath": [
          "operations",
          "/{}/{}",
          "get",
        ],
        "jsonPath": "/paths/~1{anything}~1{goes}/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /{anything}/{goes}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/{anything}/{goes}",
        },
        "conceptualPath": [
          "operations",
          "/{}/{}",
          "get",
        ],
        "jsonPath": "/paths/~1{anything}~1{goes}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getAnything",
        "pathPattern": "/{anything}/{goes}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /{anything}/{goes}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "path": "anything",
          },
          "method": "get",
          "path": "/{anything}/{goes}",
        },
        "conceptualPath": [
          "operations",
          "/{}/{}",
          "get",
          "parameters",
          "path",
          "anything",
        ],
        "jsonPath": "/paths/~1{anything}~1{goes}/get/parameters/1",
        "kind": "path-parameter",
      },
      "value": {
        "in": "path",
        "name": "anything",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#organization-and-group-tenants-for-resources",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "tenant formatting",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /{anything}/{goes} path parameter: anything",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "path": "goes",
          },
          "method": "get",
          "path": "/{anything}/{goes}",
        },
        "conceptualPath": [
          "operations",
          "/{}/{}",
          "get",
          "parameters",
          "path",
          "goes",
        ],
        "jsonPath": "/paths/~1{anything}~1{goes}/get/parameters/2",
        "kind": "path-parameter",
      },
      "value": {
        "in": "path",
        "name": "goes",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#organization-and-group-tenants-for-resources",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "tenant formatting",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /{anything}/{goes} path parameter: goes",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/{anything}/{goes}",
        },
        "conceptualPath": [
          "operations",
          "/{}/{}",
          "get",
        ],
        "jsonPath": "/paths/~1{anything}~1{goes}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getAnything",
        "pathPattern": "/{anything}/{goes}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /{anything}/{goes}",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/{anything}/{goes}",
        },
        "conceptualPath": [
          "operations",
          "/{}/{}",
          "get",
        ],
        "jsonPath": "/paths/~1{anything}~1{goes}/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getAnything",
        "pathPattern": "/{anything}/{goes}",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": "expected /{anything}/{goes} to begin with a resource name, not a parameter",
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": false,
    "received": undefined,
    "type": "requirement",
    "where": "GET /{anything}/{goes}",
  },
]
`;

exports[`put method fails adding put method 1`] = `
[
  {
    "change": {
      "added": {
        "method": "put",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "put",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "put",
        ],
        "jsonPath": "/paths/~1example/put",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "PUT /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "put",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "put",
        ],
        "jsonPath": "/paths/~1example/put",
        "kind": "operation",
      },
      "value": {
        "method": "put",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "PUT /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "put",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "put",
        ],
        "jsonPath": "/paths/~1example/put",
        "kind": "operation",
      },
      "value": {
        "method": "put",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "PUT /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "put",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "put",
        ],
        "jsonPath": "/paths/~1example/put",
        "kind": "operation",
      },
      "value": {
        "method": "put",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "PUT /example",
  },
  {
    "change": {
      "added": {
        "in": "query",
        "name": "version",
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "query": "version",
          },
          "method": "put",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "put",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1example/put/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation parameters snake case",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "PUT /example query parameter: version",
  },
  {
    "change": {
      "added": {
        "method": "put",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "put",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "put",
        ],
        "jsonPath": "/paths/~1example/put",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": "put is not allowed in JSON:API",
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": false,
    "received": undefined,
    "type": "added",
    "where": "PUT /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "put",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "put",
        ],
        "jsonPath": "/paths/~1example/put",
        "kind": "operation",
      },
      "value": {
        "method": "put",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "PUT /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "put",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "put",
        ],
        "jsonPath": "/paths/~1example/put",
        "kind": "operation",
      },
      "value": {
        "method": "put",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "PUT /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "put",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "put",
        ],
        "jsonPath": "/paths/~1example/put",
        "kind": "operation",
      },
      "value": {
        "method": "put",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "PUT /example",
  },
]
`;

exports[`status codes fails when status code is removed 1`] = `
[
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "changeType": "removed",
      "location": {
        "conceptualLocation": {
          "inResponse": {
            "statusCode": "200",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
        ],
        "jsonPath": "/paths/~1example/get/responses/200",
        "kind": "response",
      },
      "removed": {
        "before": {
          "description": "123",
          "statusCode": "200",
        },
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#breaking-changes",
    "error": "must not remove response status code",
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent removing status codes",
    "passed": false,
    "received": undefined,
    "type": "removed",
    "where": "GET /example response 200",
  },
]
`;

exports[`version parameter fails when there is no version parameter 1`] = `
[
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-ids",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation id set",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#tags",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation tags",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#operation-summary",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation summary",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "added": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
      "changeType": "added",
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "no put method",
    "passed": true,
    "received": undefined,
    "type": "added",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/principles/version.md#how-are-versions-accessed-and-resolved-by-consumers",
    "error": "Could not find a partial match in query parameters",
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "require version parameter",
    "passed": false,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": "https://github.com/snyk/sweater-comb/blob/main/docs/standards/rest.md#parameter-names-and-path-components",
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "path element casing",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
  {
    "change": {
      "location": {
        "conceptualLocation": {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
      "value": {
        "method": "get",
        "operationId": "getExample",
        "pathPattern": "/example",
        "summary": "this is an example",
        "tags": [
          "example",
        ],
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "resource path cannot begin with a parameter",
    "passed": true,
    "received": undefined,
    "type": "requirement",
    "where": "GET /example",
  },
]
`;
